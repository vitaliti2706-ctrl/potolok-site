// /api/telegram-submit.js
export default async function handler(req, res) {
  if (req.method !== "POST") {
    return res.status(405).json({ error: "Method not allowed" });
  }

  try {
    const { name = "", phone = "", message = "" } = req.body || {};

    // URL Telegram API (–±–µ–∑ "s" –≤ /bot/)
    const url = https://api.telegram.org/bot{process.env.TELEGRAM_BOT_TOKEN}/sendMessage;

    const payload = {
      chat_id: process.env.TELEGRAM_CHAT_ID,
      text: üì© –ó–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞\n\nüë§ –ò–º—è: ${name}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}\nüí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${message}
    };

    const tgRes = await fetch(url, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(payload),
    });

    const data = await tgRes.json();

    if (!data.ok) {
      // Telegram –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É
      return res.status(500).json({ error: "–û—à–∏–±–∫–∞ Telegram API", details: data });
    }

    // –£—Å–ø–µ—Ö
    return res.status(200).json({ success: true, data });
  } catch (err) {
    console.error("Server error:", err);
    return res.status(500).json({ error: "Internal Server Error", details: err.message });
  }
}
